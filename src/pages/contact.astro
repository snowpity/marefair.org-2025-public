---
import { Image } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import Back from "@components/Back.astro";

import phone from "@assets/contact/Mare_Fair_3_Contacts_phone_no_screen.png";
import flyer from "@assets/contact/Mare_Fair_3_Contacts_Fair_Flyer_section_only.png";
import tornTabUpper from "@assets/contact/Mare_Fair_3_Contacts_tab_torn_upper.png";

import attendee from "@assets/contact/attendee.png";
import attendeePull from "@assets/contact/attendee_pull.png";
import charity from "@assets/contact/charity.png";
import charityPull from "@assets/contact/charity_pull.png";
import pr from "@assets/contact/public.png";
import prPull from "@assets/contact/public_pull.png";
import hpic from "@assets/contact/hpic.png";
import hpicPull from "@assets/contact/hpic_pull.png";
import tech from "@assets/contact/tech.png";
import techPull from "@assets/contact/tech_pull.png";
import schedule from "@assets/contact/scheduling.png";
import schedulePull from "@assets/contact/scheduling_pull.png";

const contacts = [
    {
        number: "555-MARE-FUN",
        img: schedule,
        pull: schedulePull,
        position: "Scheduling",
        email: "scheduling@marefair.org"
    },
    {
        number: "555-TECH-1337",
        img: tech,
        pull: techPull,
        position: "Technology",
        email: "tech@marefair.org"
    },
    {
        number: "555-MARE-FAI(R)",
        img: hpic,
        pull: hpicPull,
        position: "Head Pony in Charge",
        email: "exec@marefair.org"
    },
    {
        number: "555-957-2025",
        img: pr,
        pull: prPull,
        position: "Public Relations",
        email: "pr@marefair.org"
    },
    {
        number: "413-612-1025",
        img: attendee,
        pull: attendeePull,
        position: "Attendee Relations",
        email: "attendees@marefair.org"
    },
    {
        number: "103-483-HORS",
        img: charity,
        pull: charityPull,
        position: "Charity",
        email: "charity@marefair.org"
    },
];

// Mapping the modals in build-time
const dynamicStyles = contacts.map((contact) => `
    #${contact.position.replace(/\s+/g, '')}:target ~ #contact-wrapper .pull-tab-container [href="#${contact.position.replace(/\s+/g, '')}"] {
        transform: translateY(100%);
        opacity: 0;
        pointer-events: none;
    }
    #${contact.position.replace(/\s+/g, '')}:target ~ #contact-wrapper .pull-tab-container #modal-black {
        opacity: 0.7;
        pointer-events: none;
    }
`).join('\n');
---

<Layout title="Contact | Mare Fair 2025">
    {/* Dynamically populate the style sheet with the above function */}
    <style is:inline set:html={dynamicStyles}></style>
    <Back />

    <div class="w-full md:p-2 flex flex-col items-center justify-center">

        {/* The modals */}
        {contacts.map((contact) => (
            <a href="#main" id={`${contact.position.replace(/\s+/g, '')}`} class="contact">
                <div class="relative w-full max-w-[56rem]">
                    <div class="relative">
                            <Image
                            src={contact.img}
                            alt={contact.position + " Torn"}
                            format="avif"
                            class="relative"/>
                        <div class="absolute left-[20%] md:text-3xl text-[4vw] md:leading-none leading-[4vw] reddit-sans text-3xl bottom-1/2 translate-y-1/2 ">
                            {/* <div>{contact.title}</div> */}
                            <div>{contact.number}</div>
                            <div class="dialogue"  data-email={contact.email}>{contact.email}</div>
                            {/* <div>{contact.number}</div> */}
                        </div>
                    </div>
                </div>
            </a>))}

        {/* Wrapper for the contact */}
        <div transition:name="contact" id="contact-wrapper">
            <div class="w-full max-w-3xl flex flex-col">
                <Image
                    src={flyer}
                    alt="Contact Us"
                    format="avif"
                    class="w-full"
                    width="1200"
                />
            </div>

            {/* Put a class here, so the css can tell which of the child gets pulled */}
            <div class="w-full max-w-3xl flex justify-center flex-row pull-tab-container relative overflow-hidden">
                <div class="absolute w-full max-w-3xl flex justify-center flex-row">
                {Array.from({ length: 6 }).map((_, index) => (
                    <div class={index === 0 ? 'w-full' : 'w-full -ml-2'}>
                    <Image
                        src={tornTabUpper}
                        alt="torn tab"
                        format="avif"
                        width="200"
                    />
                    </div>
                ))}
                </div>
                {
                    contacts.map((contact, index) => (
                        <a href={`#${contact.position.replace(/\s+/g, '')}`} class={`relative ${index === 0 ? '' : '-ml-2'} h-full w-full flex transition ease-in-out hover:scale-110 hover:z-50 pull-tab`}>
                            <Image
                                src={contact.pull}
                                alt={contact.position}
                                format="avif"
                                width="200"
                            />
                        </a>
                    ))
                }
                <div id="modal-black" class="fixed pointer-events-none w-screen h-screen top-0 bg-black opacity-0"></div>
            </div>

        </div>
        <div id="phoneContainer" aria-hidden class="relative lg:fixed bottom-0 left-0 z-50 ease-in-out duration-300 lg:-rotate-[10deg] mr-auto hover:rotate-0" style="transform-origin: 80.7% 2.7%;">
            <div id="display" transition:name="phoneScreen" class="absolute top-[36%] right-[31%] p-2 text-right text-3xl h-32 w-44 break-words overflow-hidden DESG" style="background-color: #918e69"> NO JS</div>
            <div id="displayFaint" class="pointer-events-none absolute top-[36%] right-[31%] p-2 text-right text-3xl h-32 w-44 break-words overflow-hidden DESG" style="color: rgba(0, 0, 0, 0.05);">888888888888888888</div>
            <Image
                src={phone}
                transition:name="phone"
                alt="Phone Background"
                width={300}
                format="avif"
                class="w-full h-auto relative z-10 pointer-events-none"
            />
            <div id="phone-pad" class="absolute top-[23.7rem] right-20 grid grid-cols-3 h-60 w-48">
                <button class="mb-1" data-value="CAL"></button>
                <button class="mb-1" data-value="BCK"></button>
                <button class="mb-1" data-value="CLR"></button>

                <button class="" data-value="1"></button>
                <button class="" data-value="2"></button>
                <button class="" data-value="3"></button>
                <button class="" data-value="4"></button>
                <button class="" data-value="5"></button>
                <button class="" data-value="6"></button>
                <button class="" data-value="7"></button>
                <button class="" data-value="8"></button>
                <button class="" data-value="9"></button>
                <button class="" data-value="*"></button>
                <button class="" data-value="0"></button>
                <button class="" data-value="#"></button>
            </div>
        </div>
    </div>
</Layout>

<style>
    .contact {
        @apply fixed inset-0 flex items-center justify-center z-50 opacity-0 pointer-events-none;
        transform: translateX(-100vw);
        /* I don't know the tailwind equivalence of doing two transitions so I'll just do this */
        transition: transform 300ms ease-in-out, opacity 300ms ease-in-out;
    }
    .contact:target {
        pointer-events: auto;
        transform: translateX(0);
        opacity: 1;
    }

    /* Add transition for pull-tabs */
    .pull-tab {
        transition: transform 300ms ease-in-out, opacity 300ms ease-in-out;
    }

    #modal-black{
        transition: transform 300ms ease-in-out, opacity 300ms ease-in-out;
    }

    html {
        overflow-x: hidden;
    }

    .dialogue {
        transition: opacity 0.1s ease-in-out, transform 0.1s ease-in-out;
        cursor: pointer;
    }
    .dialogue.copied {
        opacity: 0.5;
        transform: scale(1.1);
    }

    @keyframes vibrate {
        0% {
            transform-origin: 50% 50%;
            transform: translate(0, 0) rotate(-1deg);
        }
        50% {
            transform-origin: 50% 50%;
            transform: translate(-1px, -1px) rotate(-1deg) scale(0.99);
        }
        100% {
            transform-origin: 50% 50%;
            transform: translate(1px, 1px) rotate(1deg);
        }
    }
</style>

<script>
    import { setupPhone } from "@components/PhoneScript";
    await setupPhone();
</script>
