---
import { Image, getImage } from "astro:assets";

import { marked } from 'marked';
import Layout from '@layouts/Layout.astro';
import Prose from '@components/Prose.astro';
import Back from "../components/Back.astro";
import Up from "../components/Up.astro";
import paper from "@assets/coc/paper.png";

import Tapes from '@components/Tapes.astro';
import tape3 from "@assets/coc/tape3.png"

import maresTired from "@assets/coc/maresTired.png";
import boredSoiree from "@assets/coc/SoireeBored.png";
import boredMatinee from "@assets/coc/MatineeBored.png";
import boredFairFlyer from "@assets/coc/FairFlyerBored.png";
import boredMorningMimosa from "@assets/coc/MorningMimosaBored.png";

const BoredMares = [
  boredMatinee,
  boredFairFlyer,
  boredSoiree,
  boredMorningMimosa,
];

import plaque from "@assets/coc/plaque.png";
import bottle from "@assets/coc/bottle.png";
import trigger from "@assets/coc/trigger.png";
import postit from "@assets/coc/postit.png"


const optimizedBackgroundImage = await getImage({ src: paper, format:"avif" })

const rawUrl = 'https://raw.githubusercontent.com/snowpity/Mare-Fair-Policies/refs/heads/master';

const allPolicies = [
  {
    'title': 'Code of Conduct',
    'anchor': 'code-of-conduct',
    'file': 'Code of Conduct.md',
  },
  {
    'title': 'Terms of Sale',
    'anchor': 'terms-of-sale',
    'file': 'Terms of Sale.md',
  },
  {
    'title': 'Press Policies',
    'anchor': 'press-policies',
    'file': 'Press Policies.md',
  },
  {
    'title': 'Staff Policies',
    'anchor': 'staff-policies',
    'file': 'Staff Policies.md',
  },
  {
    'title': 'Vendor Policies',
    'anchor': 'vendor-policies',
    'file': 'Vendor Policies.md',
  },
]
const anchors = new Map<string, string>();
for (const policy of allPolicies) {
  anchors.set(encodeURI(policy.file), `#${policy.anchor}`);
}
const allAnchors = new RegExp(Array.from(anchors.keys()).join('|'), 'g')

const files = new Map<string, Promise<Response>>();
for (const policy of allPolicies) {
  files.set(policy.file, fetch(`${rawUrl}/${policy.file}`));
}


const texts = new Map<string, string>();
for (const policy of allPolicies) {
  const response = await files.get(policy.file);
  if (response === undefined ) continue;
  texts.set(policy.file, await response.text());
}

const relinkedTexts = new Map<string, string>();
const replacer = (match: string, _value: string): string => anchors.get(match) ?? '';
texts.forEach((value: string, key: string) => {
  relinkedTexts.set(key, value.replace(allAnchors, replacer));
})

const renderedPolicies: {title: string, anchor: string, html: string|Promise<string>}[] = [];
for (const policy of allPolicies) {
  const relinkedText = relinkedTexts.get(policy.file);
  if (relinkedText === undefined) continue;
  renderedPolicies.push({
    'title': policy.title,
    'anchor': policy.anchor,
    'html': marked.parse(relinkedText),
  });
}

---

<Layout title="Code of Conduct | Mare Fair 2025">
  <Back />
  <Up />
  {/* Backstage Background */}
  <div class="flex flex-col justify-center items-center p-8 overflow-hidden h-full" style="filter: drop-shadow(5px 5px 0.5rem);">

    <div class="flex flex-col justify-center items-center p-8 h-full">
      <Image src={plaque} format="avif" alt="Code of Conduct" class="max-w-[50rem] w-full mb-20" width={800}/>
      <div id="row-container" class="flex lg:flex-row-reverse flex-col items-center content w-full">
        {/* Spray bottle */}
        <div class="flex flex-row justify-end w-fit -mt-20">
          <div class="relative flex flex-row w-fit max-w-[25rem] gap-4">
            <Image src={trigger} format="avif" alt="" class="absolute right-[13%] top-[8%] sm:max-w-[2.5rem] max-w-[1.875rem]" width={40}/>
            <Image src={postit}
              format="avif"
              alt=""
              class="relative object-contain z-10 max-w-[9.5rem] sm:max-w-[12.5rem]  h-auto"
              width={200}
            />
            <Image src={bottle}
              format="avif"
              alt=""
              class="relative object-contain max-w-[9.5rem] sm:max-w-[12.5rem] h-auto -ml-10 z-40"
              width={200}
            />

          </div>



        </div>
        {/* Table Of Content */}
        <div class="h-fit w-full max-w-[40rem] relative rotate-[1deg] -translate-x-[2%] sm:bg-[length:60rem] bg-[length:50rem]" style={`background-image: url('${optimizedBackgroundImage.src}');`}>
          <Image
            src={tape3}
            format="avif"
            alt={`tape`}
            class="absolute top-0 left-1/2 -mt-7"
            style=`left: calc(50% - 100px)`
            width="200"
          />
          <Prose>
          <h3 class="relative left-16 font-bold pt-4 sm:text-[1.5rem] text-[1.2rem] sm:mt-2 mt-1.5">TABLE OF CONTENTS</h3>
          <ul class="ml-16">
            {allPolicies.map((policy) => (
              <li class="ml-4 content ">
                <a href={`/coc/#${policy.anchor}`} class="!text-black hover:text-neutral-950">
                  {policy.title}
                </a>
              </li>
            ))}

          </ul>
        </Prose>
        </div>
      </div>
    </div>
    {/* Notice Board */}

    {/* Code of Conduct Content */}
    {renderedPolicies.map((policy, index) => (
        <div class="relative w-full max-w-4xl p-8 shadow-lg max-h-full bg-top min-w-[60rem] flex flex-wrap justify-center my-10  sm:bg-[length:60rem] bg-[length:50rem]" style={`background-image: url('${optimizedBackgroundImage.src}');`}>

        <Tapes/>

        <Prose>
          <div id="content-wrapper" class="mx-auto w-11/12">
          <div class="px-4">
              <a href=`#${policy.anchor}` class="no-underline"><h2 id={policy.anchor} class="text-2xl p-2 text-nowrap reddit-sans">
                {policy.title}
              </h2></a>
              <div set:html={policy.html} class="content reddit-sans"> </div>
          </div>

          {/* Render footer images for the first threes */}
          {index >= 0 && index <= 3 && (
            <div class="w-full flex justify-end mt-8">
              <Image
                src={BoredMares[index]}
                format="avif"
                alt={`Bored Mares image ${index}`}
                class="mix-blend-multiply m-0"
                width="300"
              />
            </div>
          )}

          {/* Conditionally render the image for the last page*/}
          {index === renderedPolicies.length - 1 && (
            <div class="w-full flex justify-center mt-8">
              <Image
                src={maresTired}
                format="avif"
                alt="Mares tired from reading CoC"
                class="w-full mix-blend-multiply"
                width="1200"
              />
            </div>
          )}
          </div>
          <hr/>
        </Prose>
      </div>
    ))}
  </div>
</Layout>

<style>
  :global(li::marker) {
    color: #374151 !important;
  }
</style>

<style>
  /* To control the texts in ul li, etc, go to Prose.astro */
  .content {
  @apply sm:text-[1.5rem] text-[1.25rem] sm:leading-[2.055rem] leading-[1.7125rem] mt-0
  }


  .bg-board {
    background-color: #f5f5dc; /* Placeholder for notice board */
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
  }

  @media (max-width: 820px) {
    #content-wrapper {
        width: 95vw;
    }
}
</style>
